"use client";
import { useState } from "react";

export default function Page() {
  const [formData, setFormData] = useState({
    serial_number: "",
    office_name: "",
    mouzaJL_no: "",
    upazila_thana: "",
    district_name: "",
    holding_no: "",
    khatian_no: "",
    land_sl: "",
    dag_no: "",
    jomir_type: "",
    jomir_poriman: "",
    net_jomir_poriman: "",
    moreThenThreeYearBokoya: "",
    lastThreeYearBokoya: "",
    bokoyaJoriman: "",
    halDabi: "",
    totalDabi: "",
    totalBokoya: "",
  });

  // Multiple owners state - ‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡¶¨ owners ‡¶è‡¶∞ data store ‡¶π‡¶¨‡ßá
  const [owners, setOwners] = useState([
    { owner_name: "", owner_share: "" }
  ]);

  // Normal form fields ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø handler
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  // Owner fields ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ handler
  const handleOwnerChange = (index, field, value) => {
    const updatedOwners = owners.map((owner, i) => 
      i === index ? { ...owner, [field]: value } : owner
    );
    setOwners(updatedOwners);
  };

  // ‡¶®‡¶§‡ßÅ‡¶® owner add ‡¶ï‡¶∞‡¶æ‡¶∞ function
  const addOwner = () => {
    setOwners([...owners, { owner_name: "", owner_share: "" }]);
  };

  // Owner remove ‡¶ï‡¶∞‡¶æ‡¶∞ function (minimum 1 owner ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶π‡¶¨‡ßá)
  const removeOwner = (index) => {
    if (owners.length > 1) {
      setOwners(owners.filter((_, i) => i !== index));
    }
  };

  // Form submit handler - ‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡¶¨ data ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá
  const handleSubmit = (e) => {
    e.preventDefault();
    const completeFormData = {
      ...formData,
      owners: owners // owners array ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ‡¶≠‡¶æ‡¶¨‡ßá add ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
    };
    console.log("Complete Form Data:", completeFormData);
    
    // ‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá API call ‡¶ï‡¶∞‡¶¨‡ßá‡¶®
    // fetch('/api/land-tax', {
    //   method: 'POST',
    //   headers: { 'Content-Type': 'application/json' },
    //   body: JSON.stringify(completeFormData)
    // })
  };

  // Reusable Input Component
  const InputField = ({ name, label, type = "text" }) => (
    <div className="flex flex-col">
      <label htmlFor={name} className="mb-1 font-medium text-gray-700">
        {label}
      </label>
      <input
        id={name}
        name={name}
        type={type}
        value={formData[name]}
        onChange={handleChange}
        className="border text-[#333333] border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
      />
    </div>
  );

  return (
    <div className="bg-white">
      <div className="container mx-auto px-4 py-8">
        <h2 className="text-3xl font-bold text-center mb-6 text-blue-700">
          ‡¶≠‡ßÇ‡¶Æ‡¶ø ‡¶â‡¶®‡ßç‡¶®‡¶Ø‡¶º‡¶® ‡¶ï‡¶∞ ‡¶™‡¶∞‡¶ø‡¶∂‡ßã‡¶ß ‡¶∞‡¶∏‡¶ø‡¶¶
        </h2>
        
        <form onSubmit={handleSubmit} className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶§‡¶•‡ßç‡¶Ø Section */}
          <h3 className="col-span-2 text-xl font-semibold text-gray-800 border-b pb-2">
            üìå ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶§‡¶•‡ßç‡¶Ø
          </h3>
          <InputField name="serial_number" label="‡¶ï‡ßç‡¶∞‡¶Æ‡¶ø‡¶ï ‡¶®‡¶Ç" type="text" />
          <InputField name="office_name" label="‡¶∏‡¶ø‡¶ü‡¶ø ‡¶ï‡¶∞‡ßç‡¶™‡ßã‡¶∞‡ßá‡¶∂‡¶®/ ‡¶™‡ßå‡¶∞/ ‡¶á‡¶â‡¶®‡¶ø‡¶Ø‡¶º‡¶® ‡¶≠‡ßÇ‡¶Æ‡¶ø ‡¶Ö‡¶´‡¶ø‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ" type="text" />
          <InputField name="mouzaJL_no" label="‡¶Æ‡ßå‡¶ú‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ì ‡¶ú‡ßá. ‡¶è‡¶≤. ‡¶®‡¶Ç:" type="text" />
          <InputField name="upazila_thana" label="‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ/‡¶•‡¶æ‡¶®‡¶æ:" type="text" />
          <InputField name="district_name" label="‡¶ú‡ßá‡¶≤‡¶æ:" type="text" />
          <InputField name="holding_no" label="‡ß® ‡¶®‡¶Ç ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶π‡ßã‡¶≤‡ßç‡¶°‡¶ø‡¶Ç ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞:" type="text" />
          <InputField name="khatian_no" label="‡¶ñ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ‡¶® ‡¶®‡¶Ç:" type="text" />

          {/* ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ Section - Multiple Owner Support */}
          <div className="col-span-2">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-xl font-semibold text-gray-800 border-b pb-2">
                üë§ ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£
              </h3>
              <button
                type="button"
                onClick={addOwner}
                className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-200 text-sm font-semibold"
              >
                + ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
              </button>
            </div>
            
            {/* Dynamic Owner Fields */}
            {owners.map((owner, index) => (
              <div key={index} className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4 p-4 border border-gray-200 rounded-lg bg-gray-50">
                <div className="flex items-center justify-between col-span-2 mb-2">
                  <h4 className="font-medium text-gray-700">‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï #{index + 1}</h4>
                  {owners.length > 1 && (
                    <button
                      type="button"
                      onClick={() => removeOwner(index)}
                      className="text-red-600 hover:text-red-800 text-sm font-medium bg-red-100 px-2 py-1 rounded"
                    >
                      ‚úï ‡¶∏‡¶∞‡¶æ‡¶®
                    </button>
                  )}
                </div>
                
                <div className="flex flex-col">
                  <label className="mb-1 font-medium text-gray-700">
                    ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
                  </label>
                  <input
                    type="text"
                    value={owner.owner_name}
                    onChange={(e) => handleOwnerChange(index, 'owner_name', e.target.value)}
                    className="border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®"
                  />
                </div>
                
                <div className="flex flex-col">
                  <label className="mb-1 font-medium text-gray-700">
                    ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂
                  </label>
                  <input
                    type="text"
                    value={owner.owner_share}
                    onChange={(e) => handleOwnerChange(index, 'owner_share', e.target.value)}
                    className="border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                    placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡ßß/‡ß®, ‡ßß/‡ß™, ‡ß®/‡ß©"
                  />
                </div>
              </div>
            ))}
          </div>

          {/* ‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ Section */}
          <h3 className="col-span-2 text-xl font-semibold text-gray-800 border-b pb-2 mt-4">
            üåç ‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£
          </h3>
          <InputField name="land_sl" label="‡¶ï‡ßç‡¶∞‡¶Æ‡¶É" />
          <InputField name="dag_no" label="‡¶¶‡¶æ‡¶ó ‡¶®‡¶Ç" />
          <InputField name="jomir_type" label="‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡¶ø" />
          <InputField name="jomir_poriman" label="‡¶ú‡¶Æ‡¶ø‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ (‡¶∂‡¶§‡¶æ‡¶Ç‡¶∂)" />
          <InputField name="net_jomir_poriman" label="‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶ú‡¶Æ‡¶ø (‡¶∂‡¶§‡¶æ‡¶Ç‡¶∂)" />

          {/* ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ Section */}
          <h3 className="col-span-2 text-xl font-semibold text-gray-800 border-b pb-2 mt-4">
            üí∞ ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£
          </h3>
          <InputField
            name="moreThenThreeYearBokoya"
            label="‡¶§‡¶ø‡¶® ‡¶¨‡ßé‡¶∏‡¶∞‡ßá‡¶∞ ‡¶ä‡¶∞‡ßç‡¶ß‡ßç‡¶¨‡ßá‡¶∞ ‡¶¨‡¶ï‡ßá‡¶Ø‡¶º‡¶æ"
          />
          <InputField name="lastThreeYearBokoya" label="‡¶ó‡¶§ ‡¶§‡¶ø‡¶® ‡¶¨‡ßé‡¶∏‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ï‡ßá‡¶Ø‡¶º‡¶æ" />
          <InputField name="bokoyaJoriman" label="‡¶¨‡¶ï‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ú‡¶∞‡¶ø‡¶Æ‡¶æ‡¶®‡¶æ ‡¶ì ‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶™‡ßÇ‡¶∞‡¶£" />
          <InputField name="halDabi" label="‡¶π‡¶æ‡¶≤ ‡¶¶‡¶æ‡¶¨‡¶ø" />
          <InputField name="totalDabi" label="‡¶Æ‡ßã‡¶ü ‡¶¶‡¶æ‡¶¨‡¶ø" />
          <InputField name="totalBokoya" label="‡¶Æ‡ßã‡¶ü ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º" />

          {/* Submit Button */}
          <div className="col-span-2 flex justify-center mt-6">
            <button
              type="submit"
              className="bg-blue-600 text-white font-semibold px-8 py-3 rounded-lg shadow hover:bg-blue-700 transition duration-200 cursor-pointer"
            >
              ‡¶´‡¶∞‡ßç‡¶Æ ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶®
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}